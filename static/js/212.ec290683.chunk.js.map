{"version":3,"file":"static/js/212.ec290683.chunk.js","mappings":"uJAEA,MAAMA,EAAO,EAiBb,SAASC,EAAcC,GACrB,MAAMC,EAXR,SAAuBD,GACrB,MAAME,EAAQ,GACd,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAMI,OAAQD,IAChC,IAAK,IAAIE,EAAI,EAAGA,EAAIL,EAAMG,GAAGC,OAAQC,IACf,IAAhBL,EAAMG,GAAGE,IAAUH,EAAMI,KAAK,CAACH,EAAGE,IAG1C,OAAOH,CACT,CAGkBK,CAAcP,GAC9B,GAAuB,IAAnBC,EAAQG,OAAc,OAAOJ,EACjC,MAAOG,EAAGE,GAAKJ,EAAQO,KAAKC,MAAMD,KAAKE,SAAWT,EAAQG,SACpDO,EAAOX,EAAMY,IAAIC,GAAOA,EAAIC,SAElC,OADAH,EAAKR,GAAGE,GAAKG,KAAKE,SAAW,GAAM,EAAI,EAChCC,CACT,CAEA,SAASI,IACP,IAAIC,GAxBcC,EAwBCnB,EAvBZoB,MAAMC,KAAK,CAAEf,OAAQa,GAAQ,IAAMC,MAAMD,GAAMG,KAAK,KAD7D,IAAoBH,EA2BlB,OAFAD,EAAIjB,EAAciB,GAClBA,EAAIjB,EAAciB,GACXA,CACT,CAEA,SAASK,EAAUC,GACjB,MAAMC,EAAU,CACd,EAAG,CAAEC,WAAY,UAAWC,MAAO,WACnC,EAAG,CAAED,WAAY,UAAWC,MAAO,WACnC,EAAG,CAAED,WAAY,UAAWC,MAAO,WACnC,EAAG,CAAED,WAAY,UAAWC,MAAO,WACnC,GAAI,CAAED,WAAY,UAAWC,MAAO,WACpC,GAAI,CAAED,WAAY,UAAWC,MAAO,WACpC,GAAI,CAAED,WAAY,UAAWC,MAAO,WACpC,IAAK,CAAED,WAAY,UAAWC,MAAO,WACrC,IAAK,CAAED,WAAY,UAAWC,MAAO,WACrC,IAAK,CAAED,WAAY,UAAWC,MAAO,WACrC,KAAM,CAAED,WAAY,UAAWC,MAAO,WACtC,KAAM,CAAED,WAAY,UAAWC,MAAO,YAExC,OAAOF,EAAQD,IAAMC,EAAQ,KAC/B,CAEe,SAASG,IAEtB,MAAO1B,EAAO2B,IAAYC,EAAAA,EAAAA,UAAS,IAAMb,KAOzC,OACAc,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,aAAYD,SAAA,EACzBE,EAAAA,EAAAA,KAAA,MAAAF,SAAI,UACJE,EAAAA,EAAAA,KAAA,UAAQD,UAAU,UAAUE,QARhC,WACEP,EAASZ,IACX,EAMuDgB,SAAC,iBAGtDE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,WAAWG,MAAO,CAAEC,oBAAoB,UAADC,OAAYvC,EAAI,WAAWiC,SAC9E/B,EAAMY,IAAI,CAACC,EAAKV,IACfU,EAAID,IAAI,CAAC0B,EAAOjC,KACd4B,EAAAA,EAAAA,KAAA,OAAuBD,UAAU,WAAWG,MAAOd,EAAUiB,GAAOP,SACjEO,GAAS,IAAE,GAAAD,OADDlC,EAAC,KAAAkC,OAAIhC,UAS5B,C","sources":["2048.js"],"sourcesContent":["import {useState} from \"react\";\r\n\r\nconst SIZE = 4;\r\n\r\n// helper functions:\r\nfunction emptyBoard(size) {\r\n  return Array.from({ length: size }, () => Array(size).fill(0));\r\n}\r\n\r\nfunction getEmptyCells(board) {\r\n  const cells = [];\r\n  for (let r = 0; r < board.length; r++) {\r\n    for (let c = 0; c < board[r].length; c++) {\r\n      if (board[r][c] === 0) cells.push([r, c]);\r\n    }\r\n  }\r\n  return cells;\r\n}\r\n\r\nfunction addRandomTile(board) {\r\n  const empties = getEmptyCells(board);\r\n  if (empties.length === 0) return board;\r\n  const [r, c] = empties[Math.floor(Math.random() * empties.length)];\r\n  const next = board.map(row => row.slice());\r\n  next[r][c] = Math.random() < 0.9 ? 2 : 4;\r\n  return next;\r\n}\r\n\r\nfunction initBoard() {\r\n  let b = emptyBoard(SIZE);\r\n  b = addRandomTile(b);\r\n  b = addRandomTile(b);\r\n  return b;\r\n}\r\n\r\nfunction tileStyle(v) {\r\n  const palette = {\r\n    0: { background: '#cdc1b4', color: '#776e65' },\r\n    2: { background: '#eee4da', color: '#776e65' },\r\n    4: { background: '#ede0c8', color: '#776e65' },\r\n    8: { background: '#f2b179', color: '#f9f6f2' },\r\n    16: { background: '#f59563', color: '#f9f6f2' },\r\n    32: { background: '#f67c5f', color: '#f9f6f2' },\r\n    64: { background: '#f65e3b', color: '#f9f6f2' },\r\n    128: { background: '#edcf72', color: '#f9f6f2' },\r\n    256: { background: '#edcc61', color: '#f9f6f2' },\r\n    512: { background: '#edc850', color: '#f9f6f2' },\r\n    1024: { background: '#edc53f', color: '#f9f6f2' },\r\n    2048: { background: '#edc22e', color: '#f9f6f2' },\r\n  };\r\n  return palette[v] || palette[2048];\r\n}\r\n\r\nexport default function Game2048() {\r\n  // inner const:\r\n  const [board, setBoard] = useState(() => initBoard());\r\n\r\n  // inner functions:\r\n  function handleNewGame() {\r\n    setBoard(initBoard());\r\n  }\r\n\r\n  return (\r\n  <>\r\n    <div className=\"header2048\">\r\n      <h2>2048</h2>\r\n      <button className=\"btn2048\" onClick={handleNewGame}>New Game</button>\r\n    </div>\r\n\r\n    <div className=\"grid2048\" style={{ gridTemplateColumns: `repeat(${SIZE}, 1fr)` }}>\r\n      {board.map((row, r) =>\r\n        row.map((value, c) => (\r\n          <div key={`${r}-${c}`} className=\"cell2048\" style={tileStyle(value)}>\r\n            {value || \"\"}\r\n          </div>\r\n        ))\r\n      )}\r\n    </div>\r\n  </>\r\n);\r\n\r\n}"],"names":["SIZE","addRandomTile","board","empties","cells","r","length","c","push","getEmptyCells","Math","floor","random","next","map","row","slice","initBoard","b","size","Array","from","fill","tileStyle","v","palette","background","color","Game2048","setBoard","useState","_jsxs","_Fragment","children","className","_jsx","onClick","style","gridTemplateColumns","concat","value"],"sourceRoot":""}